apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: nifi
  namespace: nifi
spec:
  serviceName: nifi
  replicas: {{.replicas}}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nifi
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - nifi
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: nifi
          command: ["/bin/sh","-c"]
          args: ['sed -i "s/nifi.cluster.flow.election.max.wait.time=5 mins/nifi.cluster.flow.election.max.wait.time=5 sec/g" /opt/nifi/conf/nifi.properties; sed -e "s/^search/& $(dnsdomainname)/" /etc/resolv.conf > /tmp/resolv.conf;cat /tmp/resolv.conf  > /etc/resolv.conf; cd /opt/nifi ; if [ ! -f ./conf/flow.xml.gz ]; then if [ -f ./conf/archive/*.gz ]; then cp `ls -rt conf/archive/*.gz | tail -n 1` conf/flow.xml.gz; fi; fi && ./start_nifi.sh']
          image: {{.image}}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            - containerPort: 8081
            - containerPort: 8443
            - containerPort: 2882
          volumeMounts:
            - name: flowfile
              mountPath: /opt/nifi/flowfile_repository
            - name: database
              mountPath: /opt/nifi/database_repository
            - name: content
              mountPath: /opt/nifi/content_repository
            - name: provenance
              mountPath: /opt/nifi/provenance_repository
            - name: jars 
              mountPath: /opt/nifi/lib/jars
            - name: conf-archive
              mountPath: /opt/nifi/conf/archive
            - name: state
              mountPath: /opt/nifi/state
          env:
            - name: ZK_NODES_LIST
              # Requires zookeeper running
              value: "zk-0.zk-hs.zk.svc.cluster.local,zk-1.zk-hs.zk.svc.cluster.local,zk-2.zk-hs.zk.svc.cluster.local"
            - name: ZK_MONITOR_PORT
              value: "2888"
            - name: IS_CLUSTER_NODE
              value: "yes"
            - name: BANNER_TEXT
              value: "Nifi Cluster"
  volumeClaimTemplates:
  - metadata:
      name: flowfile
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: {{.storageClass}}
  - metadata:
      name: database
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: {{.storageClass}}
  - metadata:
      name: content
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: {{.storageClass}}
  - metadata:
      name: provenance
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: {{.storageClass}}
  - metadata:
      name: jars
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: {{.storageClass}}
  - metadata:
      name: conf-archive
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: {{.storageClass}}
  - metadata:
      name: state
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: {{.storageClass}}
